<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python基础</title>
      <link href="/posts/81b2f4bf.html"/>
      <url>/posts/81b2f4bf.html</url>
      
        <content type="html"><![CDATA[<h1>简介</h1><p>Python 是一个高层次的结合了解释性、编译性、互动性和面向对象的脚本语言。</p><p>Python 的设计具有很强的可读性，相比其他语言经常使用英文关键字，其他语言的一些标点符号，它具有比其他语言更有特色语法结构。</p><hr><h2 id="特点">特点</h2><ul><li>继承</li><li>多态</li><li>封装</li></ul><p>具有良好的阅读性，一个广泛的标准的库。</p><h1>基础语法</h1><h2 id="内置函数">内置函数</h2><ul><li><p>print-打印变量，对象到屏幕上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;hello world&#x27;</span>)<span class="comment">#字符串单引号，双引号均可</span></span><br><span class="line">out: hello world</span><br></pre></td></tr></table></figure></li><li><p>type-类型函数，返回对象类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">out:<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span></span><br><span class="line"><span class="built_in">type</span>(<span class="built_in">type</span>(<span class="string">&#x27;hello world&#x27;</span>))</span><br><span class="line">out:<span class="keyword">class</span> <span class="string">&#x27;type&#x27;</span></span><br><span class="line"><span class="built_in">type</span>(<span class="built_in">range</span>(<span class="number">3</span>))</span><br><span class="line">out:<span class="keyword">class</span> <span class="string">&#x27;range&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>len-返回可迭代对象中元素的个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  <span class="built_in">len</span>(<span class="built_in">range</span>(<span class="number">3</span>))</span><br><span class="line">  out: <span class="number">3</span></span><br><span class="line">  <span class="built_in">len</span>([<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>])</span><br><span class="line">  out: <span class="number">3</span></span><br><span class="line"></span><br><span class="line">* <span class="built_in">min</span>-返回可迭代对象中最小的元素</span><br><span class="line"></span><br><span class="line">  ```python</span><br><span class="line">  <span class="built_in">min</span>([<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">7</span>])</span><br><span class="line">  out:<span class="number">3</span></span><br><span class="line">  lo=[<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">7</span>]</span><br><span class="line">  <span class="built_in">min</span>(<span class="built_in">set</span>(lo),key=lo.count)</span><br><span class="line">  out: <span class="number">7</span><span class="comment">#通过key值控制比较的序列，返回数量最少的元素</span></span><br></pre></td></tr></table></figure></li><li><p>max-返回可迭代对象中最大的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">max</span>([<span class="number">3</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">7</span>])</span><br><span class="line">out:<span class="number">7</span></span><br><span class="line">lo=[<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">7</span>]</span><br><span class="line"><span class="built_in">max</span>(<span class="built_in">set</span>(lo),key=lo.count)</span><br><span class="line">out: <span class="number">3</span><span class="comment">#通过key值控制比较的序列，返回数量最多的元素，相同返回第一个</span></span><br></pre></td></tr></table></figure></li><li><p>count-统计可迭代对象中某个元素的数量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#使用方法 变量.count() 的方式</span><br><span class="line">str=&#x27;hello world&#x27;</span><br><span class="line">str.count(&#x27;l&#x27;,0,len(str)) #后面两个参数表示从头到尾</span><br><span class="line">out:3</span><br></pre></td></tr></table></figure></li></ul><h2 id="数据容器">数据容器</h2><h3 id="list">list</h3><ul><li>有序可变序列</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建一个list</span></span><br><span class="line"><span class="built_in">list</span>() <span class="keyword">or</span> [<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="comment">#创建等差list</span></span><br><span class="line"><span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>,<span class="number">2</span>))</span><br><span class="line"><span class="comment">#相关函数</span></span><br><span class="line">.append(obj) <span class="comment">#——在列表的末尾追加元素</span></span><br><span class="line">.insert(index,obj) <span class="comment">#——在列表中插入元素</span></span><br><span class="line">.index(obj) <span class="comment">#——求指定元素的下标索引</span></span><br><span class="line"><span class="built_in">min</span>(obj)    <span class="comment">#——求列表元素最小值</span></span><br><span class="line"><span class="built_in">max</span>(obj)   <span class="comment">#——求列表元素最大值</span></span><br><span class="line">.count(obj)  <span class="comment">#——统计指定元素数量</span></span><br><span class="line"><span class="built_in">sum</span>(obj)   <span class="comment">#——对列表元素求和</span></span><br><span class="line"><span class="keyword">del</span> a[index]<span class="comment">#删除指定元素</span></span><br><span class="line">.pop(index=-<span class="number">1</span>) <span class="comment">#删除元素，并返回删除的值，与del方式的不同删除最后一个元素</span></span><br><span class="line">.extend(seq) <span class="comment">#追加多个值，以序列的方式（列表，元组）</span></span><br><span class="line">.remove(obj) <span class="comment">#移除列表中某个值的第一个匹配项</span></span><br><span class="line">.reverse() <span class="comment"># 反向列表中的元素</span></span><br><span class="line">.sort(reverse=<span class="literal">False</span>)<span class="comment">#对列表对象进行排序，没有返回值，直接对列表进行更改</span></span><br><span class="line"><span class="built_in">list</span>()<span class="comment">#转换为list类型</span></span><br></pre></td></tr></table></figure><h3 id="tuple">tuple</h3><ul><li>有序不可变序列</li></ul><p>创建一个元组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tuple</span> = <span class="built_in">tuple</span>() </span><br><span class="line"><span class="built_in">tuple</span> = ()</span><br></pre></td></tr></table></figure><p>元组中只包含一个元素时,需要在末尾添加一个逗号。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tuple</span> = (<span class="number">3</span>,)</span><br></pre></td></tr></table></figure><p>下标索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tuple</span>[index]</span><br></pre></td></tr></table></figure><p>元组操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)+(<span class="number">5</span>,)</span><br><span class="line">out: (<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>)</span><br><span class="line">(<span class="number">3</span>,)*<span class="number">3</span></span><br><span class="line">out: (<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line"><span class="number">3</span> <span class="keyword">in</span> (<span class="number">3</span>,<span class="number">4</span>,<span class="string">&#x27;str&#x27;</span>)</span><br><span class="line">out: <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>切片操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tuple</span> = <span class="built_in">tuple</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>))</span><br><span class="line">a = <span class="built_in">tuple</span>[<span class="number">1</span>:<span class="number">5</span>:<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line">out: (<span class="number">2</span>,<span class="number">4</span>)<span class="comment">#切片并不改变原来的元组</span></span><br></pre></td></tr></table></figure><p>内置函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cmp(tuple1,tuple2)</span><br><span class="line">tuple1, tuple2 = (<span class="number">123</span>,<span class="string">&#x27;xyz&#x27;</span>), (<span class="number">456</span>,<span class="string">&#x27;abc&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (cmp(tuple1,tuple2))</span><br><span class="line">out: -<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(cmp(tuple2,tuple1))</span><br><span class="line">out: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">tuple3 = tuple2+(<span class="number">786</span>,)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(cmp(tuple2,tuple3))</span><br><span class="line">out: -<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">tuple</span> = (<span class="number">123</span>,<span class="string">&#x27;xyz&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(cmp(tuple1,tuple4))</span><br><span class="line">out: <span class="number">0</span></span><br></pre></td></tr></table></figure><p>下面函数与列表类似</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">len</span>(<span class="built_in">tuple</span>)</span><br><span class="line"><span class="built_in">max</span>(<span class="built_in">tuple</span>)</span><br><span class="line"><span class="built_in">min</span>(<span class="built_in">tuple</span>)</span><br><span class="line"><span class="built_in">tuple</span>(seq) <span class="comment">#转换为元组</span></span><br><span class="line"><span class="keyword">del</span> <span class="built_in">tuple</span><span class="comment">#del object del:关键字通用删除方式，后面接对象</span></span><br></pre></td></tr></table></figure><h3 id="set">set</h3><ul><li><p>无序可变序列</p></li><li><p>特点：无序性，唯一性，可变</p></li><li><p>不支持下标索引</p></li></ul><p>创建一个集合</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br><span class="line"><span class="built_in">set</span> = <span class="built_in">set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br></pre></td></tr></table></figure><p>相关用法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">alpha = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;a&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(alpha) </span><br><span class="line"><span class="comment">#可以使用for in 进行遍历。</span></span><br><span class="line"><span class="keyword">for</span> ele <span class="keyword">in</span> alpha:</span><br><span class="line">  <span class="built_in">print</span>(ele)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 向集合中添加元素.</span></span><br><span class="line">alpha.add(<span class="string">&#x27;s&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果要添加多个元素，使用update的方式，添加一个序列。</span></span><br><span class="line">alpha.update([<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;z&#x27;</span>]) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 集合的长度</span></span><br><span class="line"><span class="built_in">len</span>(alpha) </span><br><span class="line">out: <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除元素</span></span><br><span class="line">alpha.remove(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">alpha.discard(<span class="string">&#x27;a&#x27;</span>) <span class="comment">#使用discard方法更加安全，如果集合中元素不存在，使用remove方法可能出错。</span></span><br></pre></td></tr></table></figure><h3 id="dic">dic</h3><ul><li><p>无序可变序列</p></li><li><p>字典的形式：键——值 key-value</p></li><li><p>不支持下标索引，使用键索引</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">user = &#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;John wick&#x27;</span>, <span class="string">&#x27;email&#x27;</span>: <span class="string">&#x27;john@gmail.com&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">user[<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">out: <span class="number">1</span></span><br><span class="line">user[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">out：<span class="string">&#x27;John wick&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字典的长度</span></span><br><span class="line"><span class="built_in">len</span>(user) <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加字典元素</span></span><br><span class="line">user[<span class="string">&#x27;age&#x27;</span>] = <span class="number">35</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到字典的键</span></span><br><span class="line">keys = user.keys() <span class="comment"># [&#x27;id&#x27;, &#x27;name&#x27;, &#x27;email&#x27;, &#x27;age&#x27;]. This will return a list.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到字典的值</span></span><br><span class="line">values = user.values() <span class="comment"># [1, &#x27;John wick&#x27;, &#x27;john@gmail.com&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除字典元素</span></span><br><span class="line"><span class="keyword">del</span> user[<span class="string">&#x27;age&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#字典的嵌套</span></span><br><span class="line">user = &#123;</span><br><span class="line">  <span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;John wick&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;cars&#x27;</span>: [<span class="string">&#x27;audi&#x27;</span>, <span class="string">&#x27;bmw&#x27;</span>, <span class="string">&#x27;tesla&#x27;</span>],</span><br><span class="line">  <span class="string">&#x27;projects&#x27;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&#x27;id&#x27;</span>: <span class="number">10</span>,</span><br><span class="line">      <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Project 1&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&#x27;id&#x27;</span>: <span class="number">11</span>,</span><br><span class="line">      <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Project 2&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="str">str</h3><ul><li><p>不可变序列</p></li><li><p>有序</p></li><li><p>支持下标索引<br>相关函数</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;1_2_3_4&#x27;</span>.split(<span class="string">&#x27;_&#x27;</span>)</span><br><span class="line">out: [<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#分隔一次</span></span><br><span class="line"><span class="string">&#x27;1_2_3_4&#x27;</span>.split(<span class="string">&#x27;_&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">out: [<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2_3_4&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#strip 移除头尾指定字符串</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;00000003210Runoob01230000000&quot;</span>; </span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">str</span>.strip( <span class="string">&#x27;0&#x27;</span> ))  <span class="comment"># 去除首尾字符 0</span></span><br><span class="line">out: <span class="number">32</span>10Runoob0123</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;123abcrunoob321&quot;</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">str</span>.strip( <span class="string">&#x27;12&#x27;</span> ))  <span class="comment"># 字符序列为 12</span></span><br><span class="line">out: 3abcrunoob3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>numpy</title>
      <link href="/posts/fa288682.html"/>
      <url>/posts/fa288682.html</url>
      
        <content type="html"><![CDATA[<h1>1.编写Numpy程序</h1><h2 id="1-1创建一维数组">1.1创建一维数组</h2><p>函数：array作用：通过列表或者元组创建数组(ndarray)</p><p>ndarray:多维数组对象，它是一系列<strong>同类型数据</strong>的集合，下标从0开始</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="built_in">list</span>=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="built_in">tuple</span>=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">a,b=np.array(<span class="built_in">list</span>),np.arrary(<span class="built_in">tuple</span>)</span><br><span class="line"><span class="built_in">print</span>(a,b)</span><br><span class="line">-----------</span><br><span class="line">out：[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>] [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br></pre></td></tr></table></figure><h2 id="1-2数据类型">1.2数据类型</h2><h3 id="1-2-1-指定数据类型">1.2.1 指定数据类型</h3><p>函数：dtype 作用：指定数据类型或查看数据类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a.dtype</span><br><span class="line">---------</span><br><span class="line">out: dtype(<span class="string">&#x27;int32&#x27;</span>)</span><br><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],dtype=<span class="built_in">float</span>)</span><br><span class="line">a.dtype</span><br></pre></td></tr></table></figure><h3 id="1-2-2-更多的数据类型">1.2.2 更多的数据类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d=np.array([<span class="number">1</span>+<span class="number">2j</span>,<span class="number">3</span>+<span class="number">4j</span>,<span class="number">5</span>+<span class="number">6j</span>])</span><br><span class="line">d.dtype</span><br><span class="line">---------</span><br><span class="line">out:dtype(<span class="string">&#x27;complex128&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="1-2-3-类型代码和字节序">1.2.3 类型代码和字节序</h3><p>'&lt;U5’表示长度5 的Unicode编码字符串，&lt;表示小端字节序，&gt;表示大端字节序</p><p>类型代码是数据类型写法的简化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dt=np.dtype(<span class="string">&#x27;&lt;u4&#x27;</span>)<span class="comment">#创建一个dtype对象</span></span><br><span class="line">a=np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],dtype=dt)</span><br></pre></td></tr></table></figure><h3 id="1-2-4-类型转换">1.2.4 类型转换</h3><p>函数：astype()作用：转换数据类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c=np.array([<span class="string">&#x27;1.2&#x27;</span>,<span class="string">&#x27;1.3&#x27;</span>,<span class="string">&#x27;-3.5&#x27;</span>])</span><br><span class="line">c.astype(<span class="string">&#x27;f4&#x27;</span>)</span><br><span class="line"><span class="comment">#unicode 转换为 float64</span></span><br></pre></td></tr></table></figure><h3 id="1-2-5-数学公式">1.2.5 数学公式</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mn>2</mn></msub><mo>+</mo><msup><mi>θ</mi><mn>2</mn></msup><mo>=</mo><msub><mi>m</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\sigma_2+\theta^2=m_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
